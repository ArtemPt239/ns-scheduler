name: Create and publish a Docker image

on:
  push:
    tags:
      - v*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ns-scheduler

jobs:
  build-and-push-image-and-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate versions matching
        run: |
          bash tests/validate_versions_matching.sh

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
          
      - name: Package Helm chart
        run: |
          helm package helm/chart
          ls . 
      
      - name: Publish Helm chart
        run: |
          export CHART_VERSION=$(grep 'version:' ./helm/chart/Chart.yaml | tail -n1 | awk '{ print $2}')
          ls -a
          echo  ${{ env.IMAGE_NAME }}-${CHART_VERSION}.tgz oci://ghcr.io/${{ github.actor }}/charts/${{ env.IMAGE_NAME }}
          helm push ${{ env.IMAGE_NAME }}-${CHART_VERSION}.tgz oci://ghcr.io/${{ github.actor }}/charts/${{ env.IMAGE_NAME }}
          # ${{ env.IMAGE_NAME }}-${CHART_VERSION}.tgz oci://ghcr.io/${{ github.actor }}/charts/${{ env.IMAGE_NAME }}
